
public static XSSFWorkbook testDataQuery = null;
	public static XSSFSheet testDataQueryConfigSheet = null;
	public static XSSFSheet testDataQueryQuerySheet = null;
	public static XSSFSheet testDataQueryConnDetailsSheet = null;
	public static XSSFRow testDataQueryRow = null;
	public static String excelName = null;
  
public static void dataExtract() throws ClassNotFoundException, InvalidFormatException, IOException, SQLException {

		ExtentCucumberFormatter.stepTestThreadLocal.get().pass(" Fetching data from DB - Started");
		// prefixed index value variables with i.
		/*
		 * FileInputStream fis = new FileInputStream(new File( "DBInput/DBQuery.xlsx"));
		 */
		// Spread sheet loation and sheet name changed
		FileInputStream fis = new FileInputStream(new File("TestData/DBInputDetails.xlsx"));
		testDataQuery = new XSSFWorkbook(fis);
		testDataQueryConfigSheet = testDataQuery.getSheet("Config");
		testDataQueryQuerySheet = testDataQuery.getSheet("Query");
		testDataQueryConnDetailsSheet = testDataQuery.getSheet("ConnectionDetails");
		ExtentCucumberFormatter.stepTestThreadLocal.get()
				.pass(" Fetching data from DB output folder Location :" + "TestData/DBInputDetails.xlsx");
		int iExcelName = getColumnIndex(testDataQueryConfigSheet, "ExcelName"),
				iSheetName = getColumnIndex(testDataQueryConfigSheet, "SheetName"),
				iQuery = getColumnIndex(testDataQueryConfigSheet, "Query");

		// Code Begins

		for (int rowNum = 1; rowNum <= testDataQueryConfigSheet.getLastRowNum(); rowNum++) {
			if (testDataQueryConfigSheet.getRow(rowNum).getCell(iExcelName).getStringCellValue()
					.equalsIgnoreCase(ApplicationsVariables.scenarioName)) {
				/*
				 * System.out.println(testDataQueryConfigSheet.getRow(rowNum).getCell(
				 * iExcelName) .getStringCellValue());
				 */
				// Row(1) is used for Table name in Query Sheet
				ExtentCucumberFormatter.stepTestThreadLocal.get()
						.pass(" Fetching data from DB ScenarioName : " + ApplicationsVariables.scenarioName);
				//try {

					Connection connection = DriverManager.getConnection(
							"jdbc:oracle:thin:@//"
									+ testDataQueryConnDetailsSheet.getRow(2).getCell(0).getStringCellValue(),
							testDataQueryConnDetailsSheet.getRow(2).getCell(1).getStringCellValue(),
							testDataQueryConnDetailsSheet.getRow(2).getCell(2).getStringCellValue());
					/*
					 * System.out.println(testDataQueryConnDetailsSheet.getRow(2)
					 * .getCell(0).getStringCellValue() + " :" +
					 * testDataQueryConnDetailsSheet.getRow(2).getCell(1) .getStringCellValue() +
					 * " : " +testDataQueryConnDetailsSheet.getRow(2).getCell(2)
					 * .getStringCellValue() );
					 */
					// System.out.println("jdbc:oracle:thin:@//"+connectionString+","+userName+","+password);
					Statement statement = connection.createStatement();
					System.out.println("connection created");
					ResultSet resultSet = statement.executeQuery(
							testDataQueryConfigSheet.getRow(rowNum).getCell(iQuery).getStringCellValue().toString());
					System.out.println("resultset created");
					System.out.println(
							testDataQueryConfigSheet.getRow(rowNum).getCell(iQuery).getStringCellValue().toString());
					ExtentCucumberFormatter.stepTestThreadLocal.get().pass(" Fetching data from DB Query details: "
							+ testDataQueryConfigSheet.getRow(rowNum).getCell(iQuery).getStringCellValue().toString());
					for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
						resultSet.getMetaData().getColumnLabel(i);
					}
					excelName = testDataQueryConfigSheet.getRow(rowNum).getCell(iExcelName).getStringCellValue()
							.toString();
					String sheetName = testDataQueryConfigSheet.getRow(rowNum).getCell(iSheetName).getStringCellValue()
							.toString();
					 System.out.println("Excel Name :" + excelName);
					if (testDataQueryConfigSheet.getRow(rowNum).getCell(iExcelName).getStringCellValue()
							.equalsIgnoreCase("LBXNewCustomerExtractDB")) {
						writeDBResultToExcelLBXCust(resultSet);
					} else {
						writeDBResultToExcel(resultSet, excelName, sheetName);
					}
					statement.close();
					connection.close();
					ExtentCucumberFormatter.stepTestThreadLocal.get().pass(" Fetching data from DB - Completed");
				//} catch (NullPointerException e) {
				//	e.printStackTrace();
				//}
			}

		}

	}
